# Modified from https://github.com/se310-Team4/KKDZ/blob/release-2.0/.github/workflows/sonarcloud.yml
# Used under the MIT licence

# Uses guidance from https://community.sonarsource.com/t/how-to-use-sonarcloud-with-a-forked-repository-on-github/7363/30
# Enables SonarCloud to run on PRs from forked repos (as API key is not accessiable by default)

name: SonarCloud

on:
  workflow_run:
    workflows: ["Test"]
    types: [completed]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    # Sonarcloud only runs on the main repo, not forks
    if: github.event.workflow_run.conclusion == 'success' && github.repository == 'SOFTENG310-2023/TimeWeaver'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0
      - name: Download code coverage
        uses: actions/github-script@v5
        with:
          script: |
            const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            const matchArtifact = allArtifacts.data.artifacts
              .find(artifact => artifact.name == "timeweaver-lcov-file");
            const download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            const fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/code-coverage.zip`, Buffer.from(download.data));

      - name: Unzip code coverage
        run: unzip code-coverage.zip -d coverage

      - name: Download PR number
        if: github.event.workflow_run.event == 'pull_request'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.name }}
          run_id: ${{ github.event.workflow_run.id }}
          name: PR_NUMBER

      - name: Read PR number
        if: github.event.workflow_run.event == 'pull_request'
        id: pr_number
        uses: juliangruber/read-file-action@v1
        with:
          path: ./PR_NUMBER.txt

      - name: Download PR info
        if: github.event.workflow_run.event == 'pull_request'
        uses: octokit/request-action@v2.x
        id: get_pr_data
        with:
          route: GET /repos/{full_name}/pulls/{number}
        env:
          INPUT_FULL_NAME: ${{ github.event.repository.full_name }}
          INPUT_NUMBER: ${{ steps.pr_number.outputs.content }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: SonarCloud Scan (for PRs)
        if: github.event.workflow_run.event == 'pull_request'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }}
            -Dsonar.pullrequest.key=${{ fromJson(steps.get_pr_data.outputs.data).number }}
            -Dsonar.pullrequest.branch=${{ fromJson(steps.get_pr_data.outputs.data).head.ref }}
            -Dsonar.pullrequest.base=${{ fromJson(steps.get_pr_data.outputs.data).base.ref }}

      - name: SonarCloud Scan (for branches)
        if: github.event.workflow_run.event != 'pull_request'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }}
            -Dsonar.pullrequest.branch.name=${{ github.event.workflow_run.head_branch }}
